# 1로 만들기
# 정수 x가 주어졌을 때, 정수 x에 사용할 수 있는 연산은 다음과 같이 4가지 이다
# 1. x가 5로 나누어 떨어지면, 5로 나눔
# 2. x가 3으로 나누어 떨어지면, 3으로 나눔
# 3. x가 2로 나누어 떨어지면, 2로 나눔
# 4. x에서 1을 뺌

# 정수 x가 주어졌을 때, 연산 4개를 적절히 사용해서 값을 1로 만들고자 한다.
# 연산을 사용하는 횟루의 최솟값을 출력하세요.

# 피보나치 수열 문제를 도식화한 것처럼 함수가 호출되는 과정을 그림으로 그림
#   최적 부분 구조와 중복되는 부분 문제를 만족
# ai = i를 1로 만들기 위한 최소 연산 횟수
# ai = min(ai-1,ai/2,ai/3,ai/5) + 1
# 1을 빼는 연산을 제외하고는 해당 수로 나누어떨어질 때에 한에 점화식을 적용할 수 있음

x = int(input())

# 앞서 계산된 결과를 저장하기 위한 DP테이블 초기화
d = [0] * 30001

# 다이나믹프로그래밍 진행(보텀업)
for i in range(2, x+1):
    d[i] = d[i-1] + 1
    # 현재 수가 2로 나누어 떨어지는 경우
    if i % 2 == 0:
        d[i] = min(d[i], d[i//2] + 1)
    # 현재 수가 3으로 나누어 떨어지는 경우
    if i % 3 == 0:
        d[i] = min(d[i], d[i//3] + 1)
    # 현재 수가 5로 나누어 떨어지는 경우
    if i % 5 == 0:
        d[i] = min(d[i], d[i//5] + 1)
print(d[x])