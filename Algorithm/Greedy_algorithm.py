# 그리디 알고리즘(탐욕법) : 현재 상황에서 지금 당장 좋은 것만 고르는 방법
# 일반적인 그리디 알고리즘은 문제를 풀기 위한 최소한의 아이디어를 떠올릴 수 있는 능력을 요구함
# 그리디 해법 - 정당성 분석이 중요
#     단순히 가장 좋아보이는 것을 반복적으로 선택해도 최적의 해를 구할 수 있는지 검토

# 일반적인 상황에서 그리디는 최적의 해를 보장할 수 없을 때가 많음
# 하지만 코딩 테스트에서의 대부분의 그리디 문제는 탐욕법으로 얻은 해가 최적의 해가 되는 상황에서.
# 이를 추론할 수 있어야 풀리도록 출제

# 예시 문제 - 거스름돈 문제
# 손님에게 거슬러 주어야 할 돈이 n원일 때 거슬러 주어야 할 동전의 최소 개수?
# 그리디 --> 가장 큰 화폐 단위부터 돈을 거슬러줌

# 정당성 분석
#   가지고 있는 동전 중에서 큰 단위가 항상 작은 단위의 배수이므로
#   작은 단위의 동전들을 종합해 다른 해가 나올 수 없기 때문에

n = 1260
count = 0

# 큰 단위 화폐부터 차례대로 확인
array = [500, 100, 50, 10]

for coin in array:
    count += n//coin  # 해당 화폐로 거슬러 줄 수 있는 동전의 개수 세기
    n %= coin

print(count)

# 화페의 종류가 k라 할 때 시간 복잡도 O(k)다
# 이 알고리즘의 시간 복잡도는 거슬러줘야하는 금액과는 무관, 동전의 총 종류에만 영향을 받음
