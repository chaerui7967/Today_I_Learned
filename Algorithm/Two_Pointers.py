# 투 포인터 알고리즘 : 리스트에 순차적으로 접근해야 할 때 두개의 점의 위치를 기록하면서 처리하는 알고리즘
# 흔히 2,3,4,5,6,7번 학생을 지목해야 할 때, 간단히 2번부터 7번까지의 학생이라고 부르곤 한다.
# 리스트에 담긴 데이터에 순차적으로 접근해야 할 때는 시작점과 끝점 2개의 점으로 접근할 데이터의 범위를 표현 가능

# 문제 예시
# 특정한 합을 가지는 부분 연속 수열 찾기
# n개의 자연수로 구성된 수열
# 합이 m인 부분 연속 수열의 개수 구하기
# 수행 시간 제한은 O(N)  --> 완전 탐색으로 해결하면 O(N**2)

# 투포인터 알고리즘 수행
# 1. 시작점과 끝점이 첫 번째 원소의 인덱스(0)를 가리키도록 한다.
# 2. 현재 부분 합이 m과 같다면, 카운트
# 3. 현재 부분 합이 m보다 작으면, end를 1 증가
# 4. 현재 부분 합이 m보다 크거나 같다면, start를 1 증가
# 5. 모든 경우를 확인할 때까지 2번부터 4번까지 반복

n = 5
m = 5
data = [1,2,3,2,5]

count = 0
interval_sum = 0
end = 0

# start를 차례대로 증가시키며 반복
for start in range(n):
    # end를 가능한 만큼 이동
    while interval_sum < m and end < n:
        interval_sum += data[end]
        end += 1
    # 부분합이 m일 때 카운트 증가
    if interval_sum == m:
        count += 1
    interval_sum -= data[start]

print(count)
