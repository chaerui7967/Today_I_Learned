# Bronze 3_2061
# 암호문이 크랙되지 않도록 하기 위해서는, 키 값이 적절히 큰 수들의 곱으로 이루어져 있는지를 확인해야 할 필요가 있다.
# 키 값 K(4≤K≤10^100)와 정수 L(2≤L≤1,000,000)이 주어졌을 때, K를 인수분해 했을 때,
# 항상 L 이상의 값으로만 이루어져 있는지를 확인하고 싶다. 물론 인수분해 할 때 1로 나누는 경우는 고려하지 않는다.
# 예를 들어 K=143인 경우, 이는 11과 13의 곱으로 이루어져 있다.
# 즉, 이를 인수분해 하는 방법은 11×13, 143의 두 가지 경우뿐이다.
# 따라서 L이 11일 경우에는 인수분해 했을 때 나온 수들이 모두 L 이상이므로 좋은 경우지만,
# L이 12이상일 경우에는 좋은 암호가 아니다.
# K와 L이 주어졌을 때, 좋은 암호인지 판단하는 프로그램을 작성하시오.

L, K = map(int, input().split())
li = [1]*K
for i in range(2, int(K**0.5)+1):
    if li[i] == 1:
        for j in range(i+i, K, i):
            li[j] = 0
prime_li = [i for i in range(2, K) if li[i] == 1]

good = 1
for n in prime_li:
    if L%n == 0:
        print(f"BAD {n}")
        good = 0
        break
if good == 1:
    print("GOOD")