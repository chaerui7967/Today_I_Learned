# Silver 3_1699

# 어떤 자연수 N은 그보다 작거나 같은 제곱수들의 합으로 나타낼 수 있다.
# 예를 들어 11=32+12+12(3개 항)이다. 이런 표현방법은 여러 가지가 될 수 있는데,
# 11의 경우 11=22+22+12+12+12(5개 항)도 가능하다.
# 이 경우, 수학자 숌크라테스는 “11은 3개 항의 제곱수 합으로 표현할 수 있다.”라고 말한다.
# 또한 11은 그보다 적은 항의 제곱수 합으로 표현할 수 없으므로,
# 11을 그 합으로써 표현할 수 있는 제곱수 항의 최소 개수는 3이다.
# 주어진 자연수 N을 이렇게 제곱수들의 합으로 표현할 때에 그 항의 최소개수를 구하는 프로그램을 작성하시오.

# 제곱수 합의 최소 개수
# 0 - 0개
# 1 - 1^2 (1개)
# 2 - 1^2 + 1^2 (2개)
# 3 - 1^2 + 1^2 + 1^2 (3개)
# 4 - 2^2 (1개)
# 5 - 2^2 + 1^2 (2개)
# 6 - 2^2 + 1^2 + 1^2 (3개)
# 7 - 2^2 + 1^2 + 1^2 + 1^2 (4개)
# 8 - 2^2 + 2^2 (2개)
# 9 - 3^2 (1개)
# 10 - 3^2 + 1^2 (2개)
# 11 - 3^2 + 1^2 + 1^2 (3개)
# 12 - 2^2 + 2^2 + 2^2 (3개)
# 13 - 3^2 + 2^2 (2개)
# 14 - 3^2 + 2^2 + 1^2 (3개)
# 15 - 3^2 + 2^2 + 1^2 + 1^2 (4개)
# 16 - 4^2 (1개)

# dp[i] = min(dp[i - j]) + 1
# 예를 들어 i가 16이라고 했을때 i보다 작거나 같은 제곱수는 1, 4, 9, 16이다.
# dp[i - 1], dp[i - 4], dp[i - 9], dp[i - 16]중 가장 작은 값은 0이고 여기에 1을 더한 값을 dp[i]에 넣어준다.

n = int(input())
dp = [0 for i in range(n + 1)]
square = [i * i for i in range(1, 317)]
for i in range(1, n + 1):
    s = []
    for j in square:
        if j > i:
            break
        s.append(dp[i - j])
    dp[i] = min(s) + 1
print(dp[n])